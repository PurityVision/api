version: "3.7"
name: purity-vision
secrets:
  google_credentials:
    file: ${GOOGLE_APPLICATION_CREDENTIALS}
services:
  web:
    image: purity-vision:latest
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    ports:
      - "8080:8080"
    secrets:
      - google_credentials
    environment:
      - PURITY_DB_HOST=${PURITY_DB_HOST}
      - PURITY_DB_PORT=${PURITY_DB_PORT}
      - PURITY_DB_NAME=${PURITY_DB_NAME}
      - PURITY_DB_USER=${PURITY_DB_USER}
      - PURITY_DB_PASS=${PURITY_DB_PASS}
      - PURITY_DB_SSL_MODE=${PURITY_DB_SSL_MODE}
      - GOOGLE_APPLICATION_CREDENTIALS=/run/secrets/google_credentials
      - PROJECT_ROOT=${PROJECT_ROOT}
      - PURITY_LOG_LEVEL=${PURITY_LOG_LEVEL}
  postgres:
    image: postgres:latest
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      - PROJECT_ROOT=${PROJECT_ROOT}
      - POSTGRES_DB=${PURITY_DB_NAME}
      - POSTGRES_PASSWORD=${PURITY_DB_PASS}
    volumes:
      # - "/pg-docker-data:/var/lib/postgresql/data"
      - "${PROJECT_ROOT}/pg-data:/var/lib/postgresql/data"
      - "${PROJECT_ROOT}/migrations:/docker-entrypoint-initdb.d"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PURITY_DB_USER}", "-d", "${PURITY_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 3
